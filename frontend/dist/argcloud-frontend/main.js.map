{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/header/header.component.ts","./src/app/components/home/home.component.ts","./src/app/components/login/login.component.ts","./src/app/components/register/register.component.ts","./src/app/guards/auth.guard.ts","./src/app/guards/guest.guard.ts","./src/app/interceptors/auth.interceptor.ts","./src/app/services/auth.service.ts","./src/main.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <app-header></app-header>\n    <router-outlet></router-outlet>\n  `,\n  styles: []\n})\nexport class AppComponent {\n  title = 'ArgCloud';\n} ","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { HeaderComponent } from './components/header/header.component';\n\nimport { AuthService } from './services/auth.service';\nimport { AuthGuard } from './guards/auth.guard';\nimport { GuestGuard } from './guards/guest.guard';\nimport { AuthInterceptor } from './interceptors/auth.interceptor';\n\nconst routes = [\n  { path: '', component: HomeComponent },\n  { path: 'login', component: LoginComponent, canActivate: [GuestGuard] },\n  { path: 'register', component: RegisterComponent, canActivate: [GuestGuard] },\n  { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard] },\n  { path: 'verify-email', component: HomeComponent },\n  { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    RegisterComponent,\n    DashboardComponent,\n    HeaderComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(routes)\n  ],\n  providers: [\n    AuthService,\n    AuthGuard,\n    GuestGuard,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { } ","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthService } from '../../services/auth.service';\nimport { User } from '../../models/user.model';\n\n@Component({\n  selector: 'app-dashboard',\n  template: `\n    <div class=\"container mt-4\">\n      <!-- Welcome Section -->\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"card mb-4\">\n            <div class=\"card-body\">\n              <h1 class=\"card-title\">\n                <i class=\"fas fa-tachometer-alt me-2\"></i>\n                Panel de Control\n              </h1>\n              <p class=\"card-text\" *ngIf=\"currentUser\">\n                Bienvenido/a, <strong>{{ currentUser.firstName }} {{ currentUser.lastName }}</strong>\n              </p>\n              <small class=\"text-muted\">\n                Administra tus máquinas virtuales desde aquí\n              </small>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Stats Cards -->\n      <div class=\"row mb-4\">\n        <div class=\"col-lg-3 col-md-6 mb-3\">\n          <div class=\"card bg-primary text-white\">\n            <div class=\"card-body\">\n              <div class=\"d-flex justify-content-between\">\n                <div>\n                  <h4>0</h4>\n                  <p class=\"mb-0\">VMs Activas</p>\n                </div>\n                <div class=\"align-self-center\">\n                  <i class=\"fas fa-server fa-2x\"></i>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"col-lg-3 col-md-6 mb-3\">\n          <div class=\"card bg-success text-white\">\n            <div class=\"card-body\">\n              <div class=\"d-flex justify-content-between\">\n                <div>\n                  <h4>0</h4>\n                  <p class=\"mb-0\">CPU Cores</p>\n                </div>\n                <div class=\"align-self-center\">\n                  <i class=\"fas fa-microchip fa-2x\"></i>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"col-lg-3 col-md-6 mb-3\">\n          <div class=\"card bg-info text-white\">\n            <div class=\"card-body\">\n              <div class=\"d-flex justify-content-between\">\n                <div>\n                  <h4>0 GB</h4>\n                  <p class=\"mb-0\">Memoria RAM</p>\n                </div>\n                <div class=\"align-self-center\">\n                  <i class=\"fas fa-memory fa-2x\"></i>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"col-lg-3 col-md-6 mb-3\">\n          <div class=\"card bg-warning text-white\">\n            <div class=\"card-body\">\n              <div class=\"d-flex justify-content-between\">\n                <div>\n                  <h4>0 GB</h4>\n                  <p class=\"mb-0\">Almacenamiento</p>\n                </div>\n                <div class=\"align-self-center\">\n                  <i class=\"fas fa-hdd fa-2x\"></i>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- VM Management Section -->\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"card\">\n            <div class=\"card-header d-flex justify-content-between align-items-center\">\n              <h5 class=\"mb-0\">\n                <i class=\"fas fa-list me-2\"></i>\n                Máquinas Virtuales\n              </h5>\n              <button class=\"btn btn-primary\" disabled>\n                <i class=\"fas fa-plus me-2\"></i>\n                Crear VM\n              </button>\n            </div>\n            <div class=\"card-body\">\n              <div class=\"alert alert-info\" role=\"alert\">\n                <h4 class=\"alert-heading\">\n                  <i class=\"fas fa-info-circle me-2\"></i>\n                  Funcionalidad en Desarrollo\n                </h4>\n                <p>\n                  La gestión de máquinas virtuales estará disponible en la próxima versión. \n                  Por ahora, puedes explorar el panel de control y las estadísticas.\n                </p>\n                <hr>\n                <p class=\"mb-0\">\n                  <strong>Próximas funcionalidades:</strong>\n                </p>\n                <ul class=\"mt-2 mb-0\">\n                  <li>Crear y eliminar máquinas virtuales</li>\n                  <li>Monitoreo en tiempo real</li>\n                  <li>Configuración de recursos</li>\n                  <li>Backup y restauración</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Account Information -->\n      <div class=\"row mt-4\">\n        <div class=\"col-md-6\">\n          <div class=\"card\">\n            <div class=\"card-header\">\n              <h5 class=\"mb-0\">\n                <i class=\"fas fa-user me-2\"></i>\n                Información de la Cuenta\n              </h5>\n            </div>\n            <div class=\"card-body\" *ngIf=\"currentUser\">\n              <div class=\"row\">\n                <div class=\"col-sm-4\"><strong>Nombre:</strong></div>\n                <div class=\"col-sm-8\">{{ currentUser.firstName }} {{ currentUser.lastName }}</div>\n              </div>\n              <hr>\n              <div class=\"row\">\n                <div class=\"col-sm-4\"><strong>Email:</strong></div>\n                <div class=\"col-sm-8\">{{ currentUser.email }}</div>\n              </div>\n              <hr>\n              <div class=\"row\">\n                <div class=\"col-sm-4\"><strong>Estado:</strong></div>\n                <div class=\"col-sm-8\">\n                  <span class=\"badge\" [class]=\"currentUser.emailVerified ? 'bg-success' : 'bg-warning'\">\n                    {{ currentUser.emailVerified ? 'Verificado' : 'Pendiente de verificación' }}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"col-md-6\">\n          <div class=\"card\">\n            <div class=\"card-header\">\n              <h5 class=\"mb-0\">\n                <i class=\"fas fa-chart-bar me-2\"></i>\n                Actividad Reciente\n              </h5>\n            </div>\n            <div class=\"card-body\">\n              <div class=\"text-center text-muted\">\n                <i class=\"fas fa-chart-line fa-3x mb-3\"></i>\n                <p>No hay actividad reciente</p>\n                <small>Los logs de actividad aparecerán aquí cuando uses tus VMs</small>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .card {\n      border: none;\n      box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);\n      transition: box-shadow 0.15s ease-in-out;\n    }\n    .card:hover {\n      box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);\n    }\n    .bg-primary, .bg-success, .bg-info, .bg-warning {\n      background: linear-gradient(45deg, var(--bs-primary), var(--bs-info)) !important;\n    }\n    .bg-success {\n      background: linear-gradient(45deg, var(--bs-success), var(--bs-info)) !important;\n    }\n    .bg-info {\n      background: linear-gradient(45deg, var(--bs-info), var(--bs-dark)) !important;\n    }\n    .bg-warning {\n      background: linear-gradient(45deg, var(--bs-warning), var(--bs-danger)) !important;\n    }\n  `]\n})\nexport class DashboardComponent implements OnInit {\n  currentUser: User | null = null;\n\n  constructor(\n    private authService: AuthService,\n    private http: HttpClient\n  ) {}\n\n  ngOnInit(): void {\n    this.currentUser = this.authService.getUser();\n    \n    // Obtener mensaje de bienvenida del backend\n    this.getDashboardData();\n  }\n\n  private getDashboardData(): void {\n    // El interceptor agregará automáticamente el token Bearer\n    this.http.get('http://localhost:8080/api/dashboard/welcome')\n      .subscribe({\n        next: (response: any) => {\n          console.log('Dashboard data:', response);\n        },\n        error: (error) => {\n          console.error('Error fetching dashboard data:', error);\n          // El interceptor manejará automáticamente los errores 401\n        }\n      });\n  }\n} ","import { Component, OnInit, OnDestroy, ChangeDetectorRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport { User } from '../../models/user.model';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-header',\n  template: `\n    <nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n      <div class=\"container\">\n        <a class=\"navbar-brand\" href=\"#\" (click)=\"navigateHome()\">\n          <i class=\"fas fa-cloud\"></i> ArgCloud\n        </a>\n        \n        <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\">\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        \n        <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <ul class=\"navbar-nav ms-auto\">\n            <li class=\"nav-item\" *ngIf=\"!isLoggedIn\">\n              <a class=\"nav-link\" href=\"#\" (click)=\"navigateLogin()\">Iniciar Sesión</a>\n            </li>\n            <li class=\"nav-item\" *ngIf=\"!isLoggedIn\">\n              <a class=\"nav-link\" href=\"#\" (click)=\"navigateRegister()\">Crear Cuenta</a>\n            </li>\n            <li class=\"nav-item dropdown\" *ngIf=\"isLoggedIn && currentUser\">\n              <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\">\n                {{ currentUser.firstName }} {{ currentUser.lastName }}\n              </a>\n              <ul class=\"dropdown-menu\">\n                <li><a class=\"dropdown-item\" href=\"#\" (click)=\"navigateDashboard()\">Dashboard</a></li>\n                <li><hr class=\"dropdown-divider\"></li>\n                <li><a class=\"dropdown-item\" href=\"#\" (click)=\"logout()\">Cerrar Sesión</a></li>\n              </ul>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  `,\n  styles: [`\n    .navbar-brand {\n      font-size: 1.5rem;\n      font-weight: bold;\n    }\n    .nav-link {\n      font-weight: 500;\n      cursor: pointer;\n    }\n    .dropdown-item {\n      cursor: pointer;\n    }\n  `]\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n  currentUser: User | null = null;\n  isLoggedIn: boolean = false;\n  private userSubscription: Subscription = new Subscription();\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  ngOnInit(): void {\n    console.log('Header: Inicializando...');\n    \n    // Esperar a que se inicialice el AuthService\n    const checkInitialization = () => {\n      if (this.authService.isAuthInitialized()) {\n        console.log('Header: AuthService inicializado, configurando estado...');\n        this.currentUser = this.authService.getCurrentUser();\n        this.isLoggedIn = this.authService.isLoggedIn();\n        \n        console.log('Header: Estado inicial:', { isLoggedIn: this.isLoggedIn, user: this.currentUser });\n        \n        // Suscribirse a cambios\n        this.userSubscription = this.authService.currentUser$.subscribe(user => {\n          console.log('Header: Cambio de usuario detectado:', user);\n          this.currentUser = user;\n          this.isLoggedIn = !!user && this.authService.isLoggedIn();\n          this.cdr.detectChanges(); // Forzar detección de cambios\n        });\n      } else {\n        console.log('Header: AuthService no inicializado aún, esperando...');\n        setTimeout(checkInitialization, 100);\n      }\n    };\n    \n    checkInitialization();\n  }\n\n  ngOnDestroy(): void {\n    this.userSubscription.unsubscribe();\n  }\n\n  navigateHome(): void {\n    this.router.navigate(['/']);\n  }\n\n  navigateLogin(): void {\n    this.router.navigate(['/login']);\n  }\n\n  navigateRegister(): void {\n    this.router.navigate(['/register']);\n  }\n\n  navigateDashboard(): void {\n    this.router.navigate(['/dashboard']);\n  }\n\n  logout(): void {\n    this.authService.logout();\n    this.router.navigate(['/']);\n  }\n} ","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-home',\n  template: `\n    <!-- Hero Section -->\n    <section class=\"hero-section\">\n      <div class=\"container\">\n        <div class=\"row align-items-center\">\n          <div class=\"col-lg-6\">\n            <h1 class=\"display-4 fw-bold mb-4\">\n              Bienvenido a ArgCloud\n            </h1>\n            <p class=\"lead mb-4\">\n              La plataforma líder en Argentina para gestionar máquinas virtuales en la nube. \n              Escalable, segura y fácil de usar.\n            </p>\n            <div class=\"d-flex gap-3\">\n              <button class=\"btn btn-light btn-lg btn-custom\" (click)=\"scrollToFeatures()\">\n                Conocer Más\n              </button>\n              <button class=\"btn btn-outline-light btn-lg btn-custom\" (click)=\"navigateToRegister()\">\n                Comenzar Gratis\n              </button>\n            </div>\n          </div>\n          <div class=\"col-lg-6\">\n            <div class=\"text-center\">\n              <i class=\"fas fa-server fa-10x opacity-75\"></i>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n\n    <!-- Features Section -->\n    <section class=\"py-5\" id=\"features\">\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-lg-12 text-center mb-5\">\n            <h2 class=\"fw-bold\">¿Por qué elegir ArgCloud?</h2>\n            <p class=\"text-muted\">Descubre las ventajas de nuestra plataforma</p>\n          </div>\n        </div>\n        \n        <div class=\"row g-4\">\n          <div class=\"col-lg-4\">\n            <div class=\"card feature-card h-100 text-center p-4\">\n              <div class=\"card-body\">\n                <i class=\"fas fa-rocket fa-3x text-primary mb-3\"></i>\n                <h5 class=\"card-title\">Alto Rendimiento</h5>\n                <p class=\"card-text\">\n                  Máquinas virtuales optimizadas con la última tecnología para máximo rendimiento.\n                </p>\n              </div>\n            </div>\n          </div>\n          \n          <div class=\"col-lg-4\">\n            <div class=\"card feature-card h-100 text-center p-4\">\n              <div class=\"card-body\">\n                <i class=\"fas fa-shield-alt fa-3x text-success mb-3\"></i>\n                <h5 class=\"card-title\">Seguridad Total</h5>\n                <p class=\"card-text\">\n                  Protección avanzada con encriptación de datos y monitoreo 24/7.\n                </p>\n              </div>\n            </div>\n          </div>\n          \n          <div class=\"col-lg-4\">\n            <div class=\"card feature-card h-100 text-center p-4\">\n              <div class=\"card-body\">\n                <i class=\"fas fa-cogs fa-3x text-info mb-3\"></i>\n                <h5 class=\"card-title\">Fácil Gestión</h5>\n                <p class=\"card-text\">\n                  Panel de control intuitivo para administrar todas tus máquinas virtuales.\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n\n    <!-- Email Verification Alert -->\n    <div class=\"container mt-4\" *ngIf=\"showVerificationMessage\">\n      <div class=\"alert alert-info alert-custom\" role=\"alert\">\n        <h4 class=\"alert-heading\">Verificación de Email</h4>\n        <p class=\"mb-0\">{{ verificationMessage }}</p>\n      </div>\n    </div>\n\n    <!-- DEBUG: Botones temporales para debugging -->\n    <div class=\"container mt-4\">\n      <div class=\"alert alert-warning\" role=\"alert\">\n        <h5>🔧 Herramientas de Debug (Temporal)</h5>\n        <button class=\"btn btn-sm btn-warning me-2\" (click)=\"debugShowState()\">\n          Mostrar Estado\n        </button>\n        <button class=\"btn btn-sm btn-danger me-2\" (click)=\"debugClearStorage()\">\n          Limpiar Storage\n        </button>\n        <small class=\"d-block mt-2\">\n          Abre la consola del navegador (F12) para ver los logs de debug\n        </small>\n      </div>\n    </div>\n\n    <!-- CTA Section -->\n    <section class=\"bg-light py-5\">\n      <div class=\"container text-center\">\n        <h3 class=\"fw-bold mb-4\">¿Listo para comenzar?</h3>\n        <p class=\"lead mb-4\">\n          Únete a miles de usuarios que ya confían en ArgCloud para sus necesidades de infraestructura.\n        </p>\n        <button class=\"btn btn-primary btn-lg btn-custom\" (click)=\"navigateToRegister()\">\n          Crear Cuenta Gratuita\n        </button>\n      </div>\n    </section>\n  `,\n  styles: [`\n    .hero-section {\n      min-height: 80vh;\n      display: flex;\n      align-items: center;\n    }\n    .fa-10x {\n      font-size: 8rem;\n    }\n  `]\n})\nexport class HomeComponent implements OnInit {\n  showVerificationMessage = false;\n  verificationMessage = '';\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit(): void {\n    // Verificar si hay un token de verificación en la URL\n    this.route.queryParams.subscribe(params => {\n      if (params['token']) {\n        this.verifyEmail(params['token']);\n      }\n    });\n  }\n\n  scrollToFeatures(): void {\n    document.getElementById('features')?.scrollIntoView({ behavior: 'smooth' });\n  }\n\n  navigateToRegister(): void {\n    this.router.navigate(['/register']);\n  }\n\n  verifyEmail(token: string): void {\n    this.authService.verifyEmail(token).subscribe({\n      next: (response) => {\n        this.verificationMessage = response.message;\n        this.showVerificationMessage = true;\n      },\n      error: (error) => {\n        this.verificationMessage = error.error?.message || 'Error al verificar el email';\n        this.showVerificationMessage = true;\n      }\n    });\n  }\n\n  debugShowState(): void {\n    console.log('=== DEBUG HOME COMPONENT ===');\n    this.authService.debugShowState();\n    console.log('Home component state:', {\n      showVerificationMessage: this.showVerificationMessage,\n      verificationMessage: this.verificationMessage\n    });\n  }\n\n  debugClearStorage(): void {\n    console.log('=== LIMPIANDO STORAGE DESDE HOME ===');\n    this.authService.debugClearAll();\n    alert('Storage limpiado. Revisa la consola y recarga la página.');\n  }\n} ","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  template: `\n    <div class=\"container mt-5\">\n      <div class=\"row justify-content-center\">\n        <div class=\"col-md-6\">\n          <div class=\"form-container\">\n            <h2 class=\"text-center mb-4\">Iniciar Sesión</h2>\n            \n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n              <div class=\"mb-3\">\n                <label for=\"email\" class=\"form-label\">Email</label>\n                <input \n                  type=\"email\" \n                  class=\"form-control\" \n                  id=\"email\"\n                  formControlName=\"email\"\n                  [class.is-invalid]=\"email?.invalid && email?.touched\"\n                >\n                <div class=\"invalid-feedback\" *ngIf=\"email?.invalid && email?.touched\">\n                  <div *ngIf=\"email?.errors?.['required']\">El email es obligatorio</div>\n                  <div *ngIf=\"email?.errors?.['email']\">El formato del email no es válido</div>\n                </div>\n              </div>\n\n              <div class=\"mb-3\">\n                <label for=\"password\" class=\"form-label\">Contraseña</label>\n                <input \n                  type=\"password\" \n                  class=\"form-control\" \n                  id=\"password\"\n                  formControlName=\"password\"\n                  [class.is-invalid]=\"password?.invalid && password?.touched\"\n                >\n                <div class=\"invalid-feedback\" *ngIf=\"password?.invalid && password?.touched\">\n                  <div *ngIf=\"password?.errors?.['required']\">La contraseña es obligatoria</div>\n                </div>\n              </div>\n\n              <div class=\"d-grid gap-2\">\n                <button \n                  type=\"submit\" \n                  class=\"btn btn-primary\"\n                  [disabled]=\"loginForm.invalid || isLoading\"\n                >\n                  <span *ngIf=\"isLoading\" class=\"spinner-border spinner-border-sm me-2\"></span>\n                  {{ isLoading ? 'Iniciando sesión...' : 'Iniciar Sesión' }}\n                </button>\n              </div>\n            </form>\n\n            <div class=\"alert alert-danger mt-3\" *ngIf=\"errorMessage\">\n              {{ errorMessage }}\n            </div>\n\n            <div class=\"text-center mt-4\">\n              <p>¿No tienes una cuenta? \n                <a href=\"/register\" class=\"text-decoration-none\">Crear cuenta</a>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: []\n})\nexport class LoginComponent implements OnInit {\n  loginForm!: FormGroup;\n  isLoading = false;\n  errorMessage = '';\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]]\n    });\n  }\n\n  get email() { return this.loginForm.get('email'); }\n  get password() { return this.loginForm.get('password'); }\n\n  onSubmit(): void {\n    if (this.loginForm.valid) {\n      this.isLoading = true;\n      this.errorMessage = '';\n\n      this.authService.login(this.loginForm.value).subscribe({\n        next: (response) => {\n          this.isLoading = false;\n          this.router.navigate(['/dashboard']);\n        },\n        error: (error) => {\n          this.isLoading = false;\n          this.errorMessage = error.error?.message || 'Error al iniciar sesión';\n        }\n      });\n    }\n  }\n} ","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-register',\n  template: `\n    <div class=\"container mt-5\">\n      <div class=\"row justify-content-center\">\n        <div class=\"col-md-6\">\n          <div class=\"form-container\">\n            <h2 class=\"text-center mb-4\">Crear Cuenta</h2>\n            \n            <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n              <div class=\"row\">\n                <div class=\"col-md-6 mb-3\">\n                  <label for=\"firstName\" class=\"form-label\">Nombre</label>\n                  <input \n                    type=\"text\" \n                    class=\"form-control\" \n                    id=\"firstName\"\n                    formControlName=\"firstName\"\n                    [class.is-invalid]=\"firstName?.invalid && firstName?.touched\"\n                  >\n                  <div class=\"invalid-feedback\" *ngIf=\"firstName?.invalid && firstName?.touched\">\n                    <div *ngIf=\"firstName?.errors?.['required']\">El nombre es obligatorio</div>\n                  </div>\n                </div>\n\n                <div class=\"col-md-6 mb-3\">\n                  <label for=\"lastName\" class=\"form-label\">Apellido</label>\n                  <input \n                    type=\"text\" \n                    class=\"form-control\" \n                    id=\"lastName\"\n                    formControlName=\"lastName\"\n                    [class.is-invalid]=\"lastName?.invalid && lastName?.touched\"\n                  >\n                  <div class=\"invalid-feedback\" *ngIf=\"lastName?.invalid && lastName?.touched\">\n                    <div *ngIf=\"lastName?.errors?.['required']\">El apellido es obligatorio</div>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"mb-3\">\n                <label for=\"email\" class=\"form-label\">Email</label>\n                <input \n                  type=\"email\" \n                  class=\"form-control\" \n                  id=\"email\"\n                  formControlName=\"email\"\n                  [class.is-invalid]=\"email?.invalid && email?.touched\"\n                >\n                <div class=\"invalid-feedback\" *ngIf=\"email?.invalid && email?.touched\">\n                  <div *ngIf=\"email?.errors?.['required']\">El email es obligatorio</div>\n                  <div *ngIf=\"email?.errors?.['email']\">El formato del email no es válido</div>\n                </div>\n              </div>\n\n              <div class=\"mb-3\">\n                <label for=\"password\" class=\"form-label\">Contraseña</label>\n                <input \n                  type=\"password\" \n                  class=\"form-control\" \n                  id=\"password\"\n                  formControlName=\"password\"\n                  [class.is-invalid]=\"password?.invalid && password?.touched\"\n                >\n                <div class=\"invalid-feedback\" *ngIf=\"password?.invalid && password?.touched\">\n                  <div *ngIf=\"password?.errors?.['required']\">La contraseña es obligatoria</div>\n                  <div *ngIf=\"password?.errors?.['minlength']\">La contraseña debe tener al menos 8 caracteres</div>\n                </div>\n              </div>\n\n              <div class=\"d-grid gap-2\">\n                <button \n                  type=\"submit\" \n                  class=\"btn btn-primary\"\n                  [disabled]=\"registerForm.invalid || isLoading\"\n                >\n                  <span *ngIf=\"isLoading\" class=\"spinner-border spinner-border-sm me-2\"></span>\n                  {{ isLoading ? 'Creando cuenta...' : 'Crear Cuenta' }}\n                </button>\n              </div>\n            </form>\n\n            <div class=\"alert alert-success mt-3\" *ngIf=\"successMessage\">\n              {{ successMessage }}\n            </div>\n\n            <div class=\"alert alert-danger mt-3\" *ngIf=\"errorMessage\">\n              {{ errorMessage }}\n            </div>\n\n            <div class=\"text-center mt-4\">\n              <p>¿Ya tienes una cuenta? \n                <a href=\"/login\" class=\"text-decoration-none\">Iniciar sesión</a>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: []\n})\nexport class RegisterComponent implements OnInit {\n  registerForm!: FormGroup;\n  isLoading = false;\n  errorMessage = '';\n  successMessage = '';\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      firstName: ['', [Validators.required]],\n      lastName: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(8)]]\n    });\n  }\n\n  get firstName() { return this.registerForm.get('firstName'); }\n  get lastName() { return this.registerForm.get('lastName'); }\n  get email() { return this.registerForm.get('email'); }\n  get password() { return this.registerForm.get('password'); }\n\n  onSubmit(): void {\n    if (this.registerForm.valid) {\n      this.isLoading = true;\n      this.errorMessage = '';\n      this.successMessage = '';\n\n      this.authService.register(this.registerForm.value).subscribe({\n        next: (response) => {\n          this.isLoading = false;\n          this.successMessage = response.message;\n          this.registerForm.reset();\n        },\n        error: (error) => {\n          this.isLoading = false;\n          this.errorMessage = error.error?.message || 'Error al crear la cuenta';\n        }\n      });\n    }\n  }\n} ","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { delay, map } from 'rxjs/operators';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  canActivate(): Observable<boolean> | boolean {\n    console.log('AuthGuard: Verificando acceso...');\n    \n    // Si ya está inicializado, proceder inmediatamente\n    if (this.authService.isAuthInitialized()) {\n      return this.checkAuth();\n    }\n\n    console.log('AuthGuard: AuthService no inicializado, esperando...');\n    // Si no está inicializado, esperar más tiempo y luego verificar\n    return of(null).pipe(\n      delay(200),\n      map(() => {\n        console.log('AuthGuard: Reintentando después del delay...');\n        return this.checkAuth();\n      })\n    );\n  }\n\n  private checkAuth(): boolean {\n    const isLoggedIn = this.authService.isLoggedIn();\n    console.log('AuthGuard: Estado de autenticación:', isLoggedIn);\n    \n    if (isLoggedIn) {\n      console.log('AuthGuard: Acceso permitido');\n      return true;\n    } else {\n      console.log('AuthGuard: Usuario no autenticado, redirigiendo a login');\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n} ","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { delay, map } from 'rxjs/operators';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GuestGuard implements CanActivate {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  canActivate(): Observable<boolean> | boolean {\n    console.log('GuestGuard: Verificando acceso...');\n    \n    // Si ya está inicializado, proceder inmediatamente\n    if (this.authService.isAuthInitialized()) {\n      return this.checkAuth();\n    }\n\n    console.log('GuestGuard: AuthService no inicializado, esperando...');\n    // Si no está inicializado, esperar más tiempo y luego verificar\n    return of(null).pipe(\n      delay(200),\n      map(() => {\n        console.log('GuestGuard: Reintentando después del delay...');\n        return this.checkAuth();\n      })\n    );\n  }\n\n  private checkAuth(): boolean {\n    const isLoggedIn = this.authService.isLoggedIn();\n    console.log('GuestGuard: Estado de autenticación:', isLoggedIn);\n    \n    if (!isLoggedIn) {\n      console.log('GuestGuard: Usuario no autenticado, acceso permitido');\n      return true; // Permitir acceso si NO está autenticado\n    } else {\n      console.log('GuestGuard: Usuario ya autenticado, redirigiendo a dashboard');\n      this.router.navigate(['/dashboard']); // Redirigir al dashboard si está autenticado\n      return false;\n    }\n  }\n} ","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    // Agregar token a todas las requests si existe\n    const token = this.authService.getToken();\n    if (token) {\n      req = req.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n    }\n\n    return next.handle(req).pipe(\n      catchError((error: HttpErrorResponse) => {\n        // Si recibimos 401, el token es inválido\n        if (error.status === 401) {\n          console.log('Token expirado o inválido, limpiando sesión...');\n          this.authService.logout();\n          this.router.navigate(['/login']);\n        }\n        return throwError(() => error);\n      })\n    );\n  }\n} ","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, BehaviorSubject, tap } from 'rxjs';\nimport { \n  LoginRequest, \n  RegisterRequest, \n  AuthResponse, \n  MessageResponse, \n  User \n} from '../models/user.model';\n\nconst AUTH_API = 'http://localhost:8080/api/auth/';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private currentUserSubject = new BehaviorSubject<User | null>(null);\n  public currentUser$ = this.currentUserSubject.asObservable();\n  private isInitialized = false;\n\n  constructor(private http: HttpClient) {\n    // Usar setTimeout para evitar problemas de inicialización\n    setTimeout(() => {\n      this.initializeAuth();\n    }, 0);\n  }\n\n  private initializeAuth(): void {\n    try {\n      const storedUser = localStorage.getItem('user');\n      const storedToken = localStorage.getItem('token');\n      \n      console.log('Inicializando AuthService...', { hasUser: !!storedUser, hasToken: !!storedToken });\n      \n      if (storedUser && storedToken) {\n        try {\n          const user = JSON.parse(storedUser);\n          // Verificar que el token no esté obviamente expirado\n          if (this.isTokenExpired(storedToken)) {\n            console.log('Token expirado detectado durante inicialización, limpiando sesión...');\n            this.clearAuthData();\n          } else {\n            console.log('Usuario válido encontrado, estableciendo sesión...');\n            this.currentUserSubject.next(user);\n          }\n        } catch (error) {\n          console.error('Error al parsear usuario almacenado:', error);\n          this.clearAuthData();\n        }\n      } else {\n        console.log('No hay datos de sesión almacenados');\n      }\n    } catch (error) {\n      console.error('Error durante inicialización:', error);\n    } finally {\n      this.isInitialized = true;\n      console.log('AuthService inicializado');\n    }\n  }\n\n  private isTokenExpired(token: string): boolean {\n    try {\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      const now = Math.floor(Date.now() / 1000);\n      const isExpired = payload.exp < now;\n      console.log('Verificando expiración del token:', { exp: payload.exp, now, isExpired });\n      return isExpired;\n    } catch (error) {\n      console.error('Error al validar token:', error);\n      return true; // Si no se puede validar, considerarlo expirado\n    }\n  }\n\n  private clearAuthData(): void {\n    console.log('Limpiando datos de autenticación...');\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    this.currentUserSubject.next(null);\n  }\n\n  login(credentials: LoginRequest): Observable<AuthResponse> {\n    return this.http.post<AuthResponse>(AUTH_API + 'login', credentials, httpOptions)\n      .pipe(\n        tap(response => {\n          console.log('Login exitoso, guardando datos...');\n          this.saveToken(response.token);\n          const user: User = {\n            id: response.id,\n            email: response.email,\n            firstName: response.firstName,\n            lastName: response.lastName,\n            emailVerified: response.emailVerified\n          };\n          this.saveUser(user);\n          this.currentUserSubject.next(user);\n        })\n      );\n  }\n\n  register(userData: RegisterRequest): Observable<MessageResponse> {\n    return this.http.post<MessageResponse>(AUTH_API + 'register', userData, httpOptions);\n  }\n\n  verifyEmail(token: string): Observable<MessageResponse> {\n    return this.http.get<MessageResponse>(AUTH_API + 'verify-email?token=' + token);\n  }\n\n  logout(): void {\n    console.log('Cerrando sesión...');\n    this.clearAuthData();\n  }\n\n  public saveToken(token: string): void {\n    localStorage.setItem('token', token);\n  }\n\n  public getToken(): string | null {\n    return localStorage.getItem('token');\n  }\n\n  public saveUser(user: User): void {\n    localStorage.setItem('user', JSON.stringify(user));\n  }\n\n  public getUser(): User | null {\n    const user = localStorage.getItem('user');\n    return user ? JSON.parse(user) : null;\n  }\n\n  public isLoggedIn(): boolean {\n    const token = this.getToken();\n    const user = this.currentUserSubject.value;\n    \n    console.log('Verificando estado de login:', { hasToken: !!token, hasUser: !!user, isInitialized: this.isInitialized });\n    \n    // Si no está inicializado, considerarlo como no logueado\n    if (!this.isInitialized) {\n      console.log('AuthService no inicializado aún');\n      return false;\n    }\n    \n    // Verificar que existe token, usuario en memoria, y que el token no esté expirado\n    if (!token || !user) {\n      console.log('No hay token o usuario');\n      return false;\n    }\n    \n    if (this.isTokenExpired(token)) {\n      console.log('Token expirado, limpiando sesión...');\n      this.clearAuthData();\n      return false;\n    }\n    \n    console.log('Usuario autenticado correctamente');\n    return true;\n  }\n\n  public getCurrentUser(): User | null {\n    return this.currentUserSubject.value;\n  }\n\n  public isAuthInitialized(): boolean {\n    return this.isInitialized;\n  }\n\n  // Función de debug para limpiar datos corruptos\n  public debugClearAll(): void {\n    console.log('DEBUG: Limpiando todos los datos de localStorage...');\n    localStorage.clear();\n    this.currentUserSubject.next(null);\n    this.isInitialized = false;\n    setTimeout(() => {\n      this.initializeAuth();\n    }, 100);\n  }\n\n  // Función de debug para mostrar estado actual\n  public debugShowState(): void {\n    console.log('DEBUG: Estado actual del AuthService:', {\n      isInitialized: this.isInitialized,\n      currentUser: this.currentUserSubject.value,\n      token: this.getToken(),\n      storedUser: localStorage.getItem('user'),\n      isLoggedIn: this.isLoggedIn()\n    });\n  }\n} ","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app/app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err)); "],"names":["AppComponent","constructor","title","selectors","decls","vars","template","AppComponent_Template","rf","ctx","i0","ɵɵelement","BrowserModule","ReactiveFormsModule","HttpClientModule","HTTP_INTERCEPTORS","RouterModule","HomeComponent","LoginComponent","RegisterComponent","DashboardComponent","HeaderComponent","AuthService","AuthGuard","GuestGuard","AuthInterceptor","routes","path","component","canActivate","redirectTo","AppModule","bootstrap","provide","useClass","multi","imports","forRoot","declarations","i1","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate2","ctx_r0","currentUser","firstName","lastName","ɵɵtextInterpolate","email","ɵɵclassMap","emailVerified","ɵɵtextInterpolate1","authService","http","ngOnInit","getUser","getDashboardData","get","subscribe","next","response","console","log","error","ɵɵdirectiveInject","i2","HttpClient","consts","DashboardComponent_Template","ɵɵtemplate","DashboardComponent_p_8_Template","DashboardComponent_div_93_Template","ɵɵproperty","Subscription","ɵɵlistener","HeaderComponent_li_9_Template_a_click_1_listener","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","navigateLogin","HeaderComponent_li_10_Template_a_click_1_listener","_r3","navigateRegister","HeaderComponent_li_11_Template_a_click_5_listener","_r4","navigateDashboard","HeaderComponent_li_11_Template_a_click_10_listener","logout","router","cdr","isLoggedIn","userSubscription","checkInitialization","isAuthInitialized","getCurrentUser","user","currentUser$","detectChanges","setTimeout","ngOnDestroy","unsubscribe","navigateHome","navigate","Router","ChangeDetectorRef","HeaderComponent_Template","HeaderComponent_Template_a_click_2_listener","HeaderComponent_li_9_Template","HeaderComponent_li_10_Template","HeaderComponent_li_11_Template","verificationMessage","route","showVerificationMessage","queryParams","params","verifyEmail","scrollToFeatures","document","getElementById","scrollIntoView","behavior","navigateToRegister","token","message","debugShowState","debugClearStorage","debugClearAll","alert","ActivatedRoute","HomeComponent_Template","HomeComponent_Template_button_click_9_listener","HomeComponent_Template_button_click_11_listener","HomeComponent_div_49_Template","HomeComponent_Template_button_click_54_listener","HomeComponent_Template_button_click_56_listener","HomeComponent_Template_button_click_66_listener","Validators","LoginComponent_div_11_div_1_Template","LoginComponent_div_11_div_2_Template","errors","LoginComponent_div_16_div_1_Template","password","errorMessage","formBuilder","isLoading","loginForm","group","required","onSubmit","valid","login","value","FormBuilder","i3","LoginComponent_Template","LoginComponent_Template_form_ngSubmit_6_listener","LoginComponent_div_11_Template","LoginComponent_div_16_Template","LoginComponent_span_19_Template","LoginComponent_div_21_Template","ɵɵclassProp","invalid","touched","RegisterComponent_div_12_div_1_Template","RegisterComponent_div_17_div_1_Template","RegisterComponent_div_22_div_1_Template","RegisterComponent_div_22_div_2_Template","RegisterComponent_div_27_div_1_Template","RegisterComponent_div_27_div_2_Template","successMessage","registerForm","minLength","register","reset","RegisterComponent_Template","RegisterComponent_Template_form_ngSubmit_6_listener","RegisterComponent_div_12_Template","RegisterComponent_div_17_Template","RegisterComponent_div_22_Template","RegisterComponent_div_27_Template","RegisterComponent_span_30_Template","RegisterComponent_div_32_Template","RegisterComponent_div_33_Template","of","delay","map","checkAuth","pipe","ɵɵinject","factory","ɵfac","providedIn","throwError","catchError","intercept","req","getToken","clone","setHeaders","Authorization","handle","status","HttpHeaders","BehaviorSubject","tap","AUTH_API","httpOptions","headers","currentUserSubject","asObservable","isInitialized","initializeAuth","storedUser","localStorage","getItem","storedToken","hasUser","hasToken","JSON","parse","isTokenExpired","clearAuthData","payload","atob","split","now","Math","floor","Date","isExpired","exp","removeItem","credentials","post","saveToken","id","saveUser","userData","setItem","stringify","clear","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}