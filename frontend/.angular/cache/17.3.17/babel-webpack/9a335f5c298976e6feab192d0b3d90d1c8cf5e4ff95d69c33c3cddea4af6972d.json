{"ast":null,"code":"import { of } from 'rxjs';\nimport { delay, map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate() {\n    console.log('AuthGuard: Verificando acceso...');\n    // Si ya está inicializado, proceder inmediatamente\n    if (this.authService.isAuthInitialized()) {\n      return this.checkAuth();\n    }\n    console.log('AuthGuard: AuthService no inicializado, esperando...');\n    // Si no está inicializado, esperar más tiempo y luego verificar\n    return of(null).pipe(delay(200), map(() => {\n      console.log('AuthGuard: Reintentando después del delay...');\n      return this.checkAuth();\n    }));\n  }\n  checkAuth() {\n    const isLoggedIn = this.authService.isLoggedIn();\n    console.log('AuthGuard: Estado de autenticación:', isLoggedIn);\n    if (isLoggedIn) {\n      console.log('AuthGuard: Acceso permitido');\n      return true;\n    } else {\n      console.log('AuthGuard: Usuario no autenticado, redirigiendo a login');\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n  static {\n    this.ɵfac = function AuthGuard_Factory(t) {\n      return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthGuard,\n      factory: AuthGuard.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["of","delay","map","AuthGuard","constructor","authService","router","canActivate","console","log","isAuthInitialized","checkAuth","pipe","isLoggedIn","navigate","i0","ɵɵinject","i1","AuthService","i2","Router","factory","ɵfac","providedIn"],"sources":["/home/deneb/Documentos/LandingPage/frontend/src/app/guards/auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { delay, map } from 'rxjs/operators';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  canActivate(): Observable<boolean> | boolean {\n    console.log('AuthGuard: Verificando acceso...');\n    \n    // Si ya está inicializado, proceder inmediatamente\n    if (this.authService.isAuthInitialized()) {\n      return this.checkAuth();\n    }\n\n    console.log('AuthGuard: AuthService no inicializado, esperando...');\n    // Si no está inicializado, esperar más tiempo y luego verificar\n    return of(null).pipe(\n      delay(200),\n      map(() => {\n        console.log('AuthGuard: Reintentando después del delay...');\n        return this.checkAuth();\n      })\n    );\n  }\n\n  private checkAuth(): boolean {\n    const isLoggedIn = this.authService.isLoggedIn();\n    console.log('AuthGuard: Estado de autenticación:', isLoggedIn);\n    \n    if (isLoggedIn) {\n      console.log('AuthGuard: Acceso permitido');\n      return true;\n    } else {\n      console.log('AuthGuard: Usuario no autenticado, redirigiendo a login');\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n} "],"mappings":"AAEA,SAAqBA,EAAE,QAAQ,MAAM;AACrC,SAASC,KAAK,EAAEC,GAAG,QAAQ,gBAAgB;;;;AAM3C,OAAM,MAAOC,SAAS;EAEpBC,YACUC,WAAwB,EACxBC,MAAc;IADd,KAAAD,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;EACb;EAEHC,WAAWA,CAAA;IACTC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;IAE/C;IACA,IAAI,IAAI,CAACJ,WAAW,CAACK,iBAAiB,EAAE,EAAE;MACxC,OAAO,IAAI,CAACC,SAAS,EAAE;;IAGzBH,OAAO,CAACC,GAAG,CAAC,sDAAsD,CAAC;IACnE;IACA,OAAOT,EAAE,CAAC,IAAI,CAAC,CAACY,IAAI,CAClBX,KAAK,CAAC,GAAG,CAAC,EACVC,GAAG,CAAC,MAAK;MACPM,OAAO,CAACC,GAAG,CAAC,8CAA8C,CAAC;MAC3D,OAAO,IAAI,CAACE,SAAS,EAAE;IACzB,CAAC,CAAC,CACH;EACH;EAEQA,SAASA,CAAA;IACf,MAAME,UAAU,GAAG,IAAI,CAACR,WAAW,CAACQ,UAAU,EAAE;IAChDL,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEI,UAAU,CAAC;IAE9D,IAAIA,UAAU,EAAE;MACdL,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;MAC1C,OAAO,IAAI;KACZ,MAAM;MACLD,OAAO,CAACC,GAAG,CAAC,yDAAyD,CAAC;MACtE,IAAI,CAACH,MAAM,CAACQ,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChC,OAAO,KAAK;;EAEhB;;;uBAtCWX,SAAS,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;IAAA;EAAA;;;aAATjB,SAAS;MAAAkB,OAAA,EAATlB,SAAS,CAAAmB,IAAA;MAAAC,UAAA,EAFR;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}