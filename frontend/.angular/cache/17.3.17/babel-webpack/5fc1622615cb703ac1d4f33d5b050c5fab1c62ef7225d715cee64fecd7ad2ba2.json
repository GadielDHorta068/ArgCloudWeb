{"ast":null,"code":"import { of } from 'rxjs';\nimport { delay, map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class GuestGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate() {\n    console.log('GuestGuard: Verificando acceso...');\n    // Si ya está inicializado, proceder inmediatamente\n    if (this.authService.isAuthInitialized()) {\n      return this.checkAuth();\n    }\n    console.log('GuestGuard: AuthService no inicializado, esperando...');\n    // Si no está inicializado, esperar más tiempo y luego verificar\n    return of(null).pipe(delay(200), map(() => {\n      console.log('GuestGuard: Reintentando después del delay...');\n      return this.checkAuth();\n    }));\n  }\n  checkAuth() {\n    const isLoggedIn = this.authService.isLoggedIn();\n    console.log('GuestGuard: Estado de autenticación:', isLoggedIn);\n    if (!isLoggedIn) {\n      console.log('GuestGuard: Usuario no autenticado, acceso permitido');\n      return true; // Permitir acceso si NO está autenticado\n    } else {\n      console.log('GuestGuard: Usuario ya autenticado, redirigiendo a dashboard');\n      this.router.navigate(['/dashboard']); // Redirigir al dashboard si está autenticado\n      return false;\n    }\n  }\n  static {\n    this.ɵfac = function GuestGuard_Factory(t) {\n      return new (t || GuestGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: GuestGuard,\n      factory: GuestGuard.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["of","delay","map","GuestGuard","constructor","authService","router","canActivate","console","log","isAuthInitialized","checkAuth","pipe","isLoggedIn","navigate","i0","ɵɵinject","i1","AuthService","i2","Router","factory","ɵfac","providedIn"],"sources":["/home/deneb/Documentos/LandingPage/frontend/src/app/guards/guest.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { delay, map } from 'rxjs/operators';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GuestGuard implements CanActivate {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  canActivate(): Observable<boolean> | boolean {\n    console.log('GuestGuard: Verificando acceso...');\n    \n    // Si ya está inicializado, proceder inmediatamente\n    if (this.authService.isAuthInitialized()) {\n      return this.checkAuth();\n    }\n\n    console.log('GuestGuard: AuthService no inicializado, esperando...');\n    // Si no está inicializado, esperar más tiempo y luego verificar\n    return of(null).pipe(\n      delay(200),\n      map(() => {\n        console.log('GuestGuard: Reintentando después del delay...');\n        return this.checkAuth();\n      })\n    );\n  }\n\n  private checkAuth(): boolean {\n    const isLoggedIn = this.authService.isLoggedIn();\n    console.log('GuestGuard: Estado de autenticación:', isLoggedIn);\n    \n    if (!isLoggedIn) {\n      console.log('GuestGuard: Usuario no autenticado, acceso permitido');\n      return true; // Permitir acceso si NO está autenticado\n    } else {\n      console.log('GuestGuard: Usuario ya autenticado, redirigiendo a dashboard');\n      this.router.navigate(['/dashboard']); // Redirigir al dashboard si está autenticado\n      return false;\n    }\n  }\n} "],"mappings":"AAEA,SAAqBA,EAAE,QAAQ,MAAM;AACrC,SAASC,KAAK,EAAEC,GAAG,QAAQ,gBAAgB;;;;AAM3C,OAAM,MAAOC,UAAU;EAErBC,YACUC,WAAwB,EACxBC,MAAc;IADd,KAAAD,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;EACb;EAEHC,WAAWA,CAAA;IACTC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;IAEhD;IACA,IAAI,IAAI,CAACJ,WAAW,CAACK,iBAAiB,EAAE,EAAE;MACxC,OAAO,IAAI,CAACC,SAAS,EAAE;;IAGzBH,OAAO,CAACC,GAAG,CAAC,uDAAuD,CAAC;IACpE;IACA,OAAOT,EAAE,CAAC,IAAI,CAAC,CAACY,IAAI,CAClBX,KAAK,CAAC,GAAG,CAAC,EACVC,GAAG,CAAC,MAAK;MACPM,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAC;MAC5D,OAAO,IAAI,CAACE,SAAS,EAAE;IACzB,CAAC,CAAC,CACH;EACH;EAEQA,SAASA,CAAA;IACf,MAAME,UAAU,GAAG,IAAI,CAACR,WAAW,CAACQ,UAAU,EAAE;IAChDL,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAEI,UAAU,CAAC;IAE/D,IAAI,CAACA,UAAU,EAAE;MACfL,OAAO,CAACC,GAAG,CAAC,sDAAsD,CAAC;MACnE,OAAO,IAAI,CAAC,CAAC;KACd,MAAM;MACLD,OAAO,CAACC,GAAG,CAAC,8DAA8D,CAAC;MAC3E,IAAI,CAACH,MAAM,CAACQ,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;MACtC,OAAO,KAAK;;EAEhB;;;uBAtCWX,UAAU,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;IAAA;EAAA;;;aAAVjB,UAAU;MAAAkB,OAAA,EAAVlB,UAAU,CAAAmB,IAAA;MAAAC,UAAA,EAFT;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}