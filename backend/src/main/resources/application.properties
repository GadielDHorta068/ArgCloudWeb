# Base de datos PostgreSQL
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:argcloud_db}
spring.datasource.username=${DB_USERNAME:argcloud_user}
spring.datasource.password=${DB_PASSWORD:argcloud_password}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate
spring.jpa.hibernate.ddl-auto=${JPA_DDL_AUTO:update}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=${JPA_SHOW_SQL:false}

# JWT Configuration
argcloud.jwt.secret=${JWT_SECRET:myVerySecretKeyThatShouldBeAtLeast32CharactersLongForSecurityPurposes}
argcloud.jwt.expiration=${JWT_EXPIRATION:86400}

# Email Configuration
spring.mail.host=${MAIL_HOST:smtp.gmail.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME:}
spring.mail.password=${MAIL_PASSWORD:}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Email Templates
argcloud.mail.verification.subject=${MAIL_VERIFICATION_SUBJECT:Verifica tu cuenta en ArgCloud}
argcloud.mail.verification.url=${MAIL_VERIFICATION_URL:http://localhost:4200/auth/verify-email}

# Application Email Configuration
app.from.email=${MAIL_USERNAME:gadiel068@gmail.com}
app.frontend.url=${FRONTEND_URL:http://localhost:4200}

# Mercado Pago Configuration
mercadopago.access-token=${MERCADOPAGO_ACCESS_TOKEN:}
mercadopago.public-key=${MERCADOPAGO_PUBLIC_KEY:}
mercadopago.webhook-secret=${MERCADOPAGO_WEBHOOK_SECRET:}
mercadopago.environment=${MERCADOPAGO_ENVIRONMENT:sandbox}
mercadopago.success-url=${MERCADOPAGO_SUCCESS_URL:http://localhost:4200/payment/success}
mercadopago.failure-url=${MERCADOPAGO_FAILURE_URL:http://localhost:4200/payment/failure}
mercadopago.pending-url=${MERCADOPAGO_PENDING_URL:http://localhost:4200/payment/pending}
mercadopago.notification-url=${MERCADOPAGO_NOTIFICATION_URL:http://localhost:8080/api/payments/webhook}

# Proxmox VE Configuration
external.api.proxmox.url=${PROXMOX_URL:https://proxmox.example.com:8006}
external.api.proxmox.username=${PROXMOX_USERNAME:root@pam}
external.api.proxmox.password=${PROXMOX_PASSWORD:}
external.api.proxmox.node=${PROXMOX_NODE:pve}
external.api.proxmox.verify-ssl=${PROXMOX_VERIFY_SSL:false}

# MikroTik Configuration
external.api.mikrotik.url=${MIKROTIK_URL:https://mikrotik.example.com}
external.api.mikrotik.username=${MIKROTIK_USERNAME:admin}
external.api.mikrotik.password=${MIKROTIK_PASSWORD:}

# API Client Configuration
external.api.timeout=${API_TIMEOUT:30000}
external.api.max-retries=${API_MAX_RETRIES:3}

# Application Configuration
app.name=${APP_NAME:ArgCloud}
app.version=${APP_VERSION:1.0.0}
app.environment=${APP_ENVIRONMENT:development}
app.frontend-url=${FRONTEND_URL:http://localhost:4200}
app.backend-url=${BACKEND_URL:http://localhost:8080}

# Security Configuration
app.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:4200,http://localhost:3000}
app.cors.allowed-methods=${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS}
app.cors.allowed-headers=${CORS_ALLOWED_HEADERS:*}

# File Upload Configuration
spring.servlet.multipart.max-file-size=${MAX_FILE_SIZE:10MB}
spring.servlet.multipart.max-request-size=${MAX_REQUEST_SIZE:10MB}

# Logging Configuration
logging.level.com.argcloud.vm=${LOG_LEVEL:INFO}
logging.level.org.springframework.web=${LOG_LEVEL_WEB:WARN}
logging.level.org.hibernate.SQL=${LOG_LEVEL_SQL:WARN}

# Server Configuration
server.port=${SERVER_PORT:8080}
server.servlet.context-path=${CONTEXT_PATH:}

# Management Configuration
management.endpoints.web.exposure.include=${MANAGEMENT_ENDPOINTS:health,info,metrics}
management.endpoint.health.show-details=${HEALTH_SHOW_DETAILS:when-authorized} 